<!doctype html>
<html lang="en">

    <head>
        <meta charset="utf-8">

        <title>C Extensions In Ruby</title>

        <meta name="description" content="A dynamic C library to extend Ruby">
        <meta name="author" content="yogesh">

        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

        <link rel="stylesheet" href="css/reveal.min.css">
        <link rel="stylesheet" href="css/theme/night.css" id="theme">

        <!-- For syntax highlighting -->
        <link rel="stylesheet" href="lib/css/zenburn.css">

    </head>

    <body>

        <div class="reveal">

            <div class="slides">
                <section>
                    <h2>C extensions</h2>
                    <p> 
                    <medium>to extend <strong>Ruby</strong></medium> 
                    </p>
                </section>


                <section>
                    <section>
                        <h2>Why do we need it ?????</h2>
                        <ul>
                            <li class = "fragment"><a href="#/1/2">Speed</a></li>
                            <li class = "fragment"><a href = "#/1/3">Existing libraries</a></li>
                        </ul>
                    </section>
                    <section data-markdown data-background = "#007777">
                            <script type = "text/template">
                                ```
                                # ruby_prog.rb
                                    i = 1
                                    while(i <= 100000)
                                        i += 1
                                    end

                                # real time : 0.92s
                                ```

                                ```
                                # ruby_c_prog.rb
                                    require "count_time"
                                    c_loop 1, 100000

                                # real time : 0.86s
                                ```
                            </script>
                    </section>
                    <section>
                        <a href = "#/1/1"><img width = 500 height = 500 src = "xmlresults1.png"></a>
                    </section>

                    <section>
                        <a href = "#/1"><img = width = 500 height = 500 src = "ingres.jpg"></a>
                    </section>

                </section>

                <section>
                    <h2>In Nutshell</h2>
                    <p>
                        Compiled dynamic C library
                    </p>
                </section>

                <section>
                <section>
                    <h2>Three Steps</h2>
                    <ul>
                        <li class = "fragment">C programs</li>
                        <li class = "fragment"><a href = "#/3/1">extconf.rb</a></li>
                        <li class = "fragment">Ruby code</li>
                    </ul>
                </section>
                <section data-markdown data-background = "#007777">
                    <script type = "text/template">
                        ```
                        # extconf.rb

                            require "mkmf"                                        # Make MakeFile

                            dir_config("path_to_the_header_and_libraries")    
                                        # include all headers and libraries in directory

                            have_library("name_of_library")                   
                                        # link specific library
                
                            create_makefile("name_of_your_library")
                                        # creates make file
                        ```
                    </script>
                </section>
                </section>


                <section>
                <section data-markdown>
                <script type = "text/template">
                    <h2>Ruby C API</h2>
                    <strong class = "fragment">
                    ```
                        #include "ruby.h"
                    ```
                    </strong>
                    <strong class = "fragment">
                    ```
                        void Init_lib_name();
                    ```
                    </strong>

                    <strong class = "fragment">
                    ```
                        VALUE ruby_obj;
                    ```
                    </strong>
                    <strong class = "fragment">
                    ```
                        TYPE(VALUE ruby_obj);
                    ```
                    </strong>
                </script>
                </section>
                </section>

                <section>
                <section data-markdown>
                <script type = "text/template">
                    <h2>Ruby C API (contd....)</h2>
                    <strong>Adding features to Ruby From C ....</strong>

                    <strong class = "fragment">
                    ```
                        VALUE rb_define_module(const char* name)                   
                                    # To Add module
                    ```
                    </strong>

                    <strong class = "fragment">
                    ```
                        VALUE rb_define_module_under(VALUE outer, const char* name) 
                                    # To Add module into another module
                    ```
                    </strong>

                    <strong class = "fragment">
                    ```
                        VALUE rb_define_class(const char* name, VALUE super)        
                                    # To Add class
                    ```
                    </strong>

                    <strong class = "fragment">
                    ```
                        void rb_define_method(VALUE klass, const char* name, VALUE (*func)(ARGV), int argc)
                                    # To Add method in class
                    ```
                    </strong>

                </script>
                </section>
                </section>


                <section>
                <section data-markdown>
                <script type = "text/template">
                    one <strong>Example</strong> is better than thousand words
                    <strong class = "fragment">
                    ```
                    module Demo
                        class Eject
                            def eject_cdrom
                            end
                        end
                    end
                    ```
                    </strong>
                </script>
                </section>
                </section>

                
                <section>
                <h2>other ways....</h2>
                <ul>
                    <li class = "fragment">RubyInline</li>
                    <li class = "fragment">RubyToC</li>
                    <li class = "fragment">SWIG</li>
                </ul>
                </section>

                <section>
                    <h3>packaging extensions in a gem</h3>
                    <ul>
                        <li class = "fragment">Provide library</li>
                        <li class = "fragment">Provide source</li>
                    </ul>
                </section>

                <section>
                <h2>Thank You</h2>
                </section>

        <script src="lib/js/head.min.js"></script>
        <script src="js/reveal.min.js"></script>

        <script>

            // Full list of configuration options available here:
            // https://github.com/hakimel/reveal.js#configuration
            Reveal.initialize({
                controls: true,
                progress: true,
                history: true,
                center: true,

                theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
                transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

                // Parallax scrolling
                // parallaxBackgroundImage: 'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg',
                // parallaxBackgroundSize: '2100px 900px',

                // Optional libraries used to extend on reveal.js
                dependencies: [
                { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
                { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
                { src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
                { src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
                ]
            });

        </script>

    </body>
</html>
